{
	// Place your footyjs workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "action": {
    "scope": "typescript",
    "prefix": "action",
    "body": [
      "import type EventEmitter from 'events'",
      "import { type Action } from '../types/actions'",
      "import type MatchSimulation from '../core/MatchSimulation'\n",
      "export default class ${1:${TM_FILENAME_BASE}} implements Action {",
      "\tstatic NAME: string = '${2:actions.${3:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}}'\n",
      "\tduration: number\n",
      "\tconstructor (public simulation: MatchSimulation) {",
      "\t}\n",
      "\tget eventEmitter (): EventEmitter {",
      "\t\treturn this.simulation.eventEmitter",
      "\t}\n",
      "\tget name (): string {",
      "\t\treturn ${1:${TM_FILENAME_BASE}}.NAME",
      "\t}\n",
      "\tgetDuration (): number {",
      "\t\treturn ${4:this.duration}",
      "\t}\n",
      "\tprocess (): Action | null {",
      "\t\t// TODO put logic here$0",
      "\t\treturn null",
      "\t}",
      "}\n"
    ]
  },
  "event": {
    "prefix": "footy-event",
    "body": [
      "export default class ${1:${TM_FILENAME_BASE}} {",
      "\tstatic NAME: string = '${1:${TM_FILENAME_BASE/(.*)/${1:/upcase}/}}'\n",
      "\tget name (): string {",
      "\t\treturn ${1:${TM_FILENAME_BASE}}.NAME",
      "\t}",
      "}\n"
    ]
  }
}